
# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Release

on:
  workflow_dispatch:
    inputs:
      release-tag:
        description: 'Release Tag (v2.x.x)'
        required: true

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Convert and set version env
      id: process-version
      run: |
        VERSION_TAG=${{ inputs.release-tag }}
        VERSION_TAG=${VERSION_TAG#v}                              # remove the 'v' prefix
        echo "versonName=$VERSION_TAG" >> $GITHUB_OUTPUT          # "1.2.3"

    - name: Cleanup
      run: |
        sudo rm -rf ~/.cache/go-build
        sudo rm -rf ~/go/pkg/mod
    - name: Module cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go    

    - name: Build 
      run: |
        GOOS=linux GOARCH=amd64 go build -o redis-GunYu_linux_amd64
        GOOS=darwin GOARCH=amd64 go build -o redis-GunYu_darwin_amd64

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ inputs.release-tag }}
        release_name: Release ${{ inputs.release-tag }}
        draft: false
        prerelease: false

    - name: Upload Release Asset Linux amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./redisGunYu-${{ steps.process-version.outputs.versonCode }}_linux_amd64
        asset_name: redisGunYu-${{ steps.process-version.outputs.versonCode }}_linux_amd64
        asset_content_type: application/octet-stream

    - name: Upload Release Asset Darwin amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./redisGunYu-${{ steps.process-version.outputs.versonCode }}_darwin_amd64
        asset_name: redisGunYu-${{ steps.process-version.outputs.versonCode }}_darwin_amd64
        asset_content_type: application/octet-stream
        
    - name: Release Changelog Builder
      uses: mikepenz/release-changelog-builder-action@v4.1.1
      with:
        configurationJson: |
          {
            "ignore_labels": [
              "Update"
            ],
          }
